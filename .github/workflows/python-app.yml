name: Build Event Planner App

on:
  push:
    branches: [ main, v0.4 ]
  pull_request:
    branches: [ main, v0.4 ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller pytest pytest-cov PyQt5 requests

    - name: Run tests
      run: |
        pytest tests --cov=event_planner --cov-report=xml

    - name: Build with PyInstaller
      run: |
        pyinstaller --name EventPlanner --onefile event_planner/main.py

    - name: Rename executable (Linux/macOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        mv dist/EventPlanner dist/EventPlanner-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'macos' }}

    - name: Rename executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mv dist/EventPlanner.exe dist/EventPlanner-windows.exe
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: EventPlanner-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || 'windows' }}
        path: dist/EventPlanner-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || 'windows${{ matrix.os == ''windows-latest'' && ''.exe'' }}' }}

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Build failed. Please check the workflow logs.'
          })
